# File similar to production, but econ in resources

app:
  instance_id: "swap-stats-1"        # ID инстанса
  grace: "120s"                      # допускаем опоздание событий
  snapshot_interval: "5s"            # период снапшотов состояния
  shutdown_timeout: "10s"

logging:
  level: "info"               # debug|info|warn|error
  format: "console"              # json|console

alerting:
  app_name: "swap-system"
  token: "7359465015:AAH6-f61xPkIil_uzydXtFVbVvzxcu_zudo"
  chat_id: "-1002612359048"

security:
  jwt:
    enabled: true # включить проверку токенов на HTTP/WS
    public_key_path:  "/Users/mac/GolandProjects/dexcelerate/infra/secrets/jwtRS256.key.pub"
    private_key_path: "/Users/mac/GolandProjects/dexcelerate/infra/secrets/jwtRS256.key"
    audience: "swap-stats" # кого адресует токен
    issuer:   "swap-stats-auth" # кто этот токен выпустил
    leeway_timeout: "30s" # время разрешенное на смещение из-за timeout

rate_limit:
  by_jwt:                 # лимитируем по sub (клиент/пользователь)
    refill_per_sec: 50    # скорость пополнения кэша токенов ежесекундно
    burst: 200            # максимальная емкость кэша ежесекундно
    ttl: "120s"           # как долго следует хранить ключ, если он не используется
  by_ip:
    refill_per_sec: 20    # скорость пополнения кэша токенов ежесекундно
    burst: 60             # максимальная емкость кэша ежесекундно
    ttl: "120s"           # как долго следует хранить ключ, если он не используется

ingest:
  broker_type: "redpanda"       # redpanda|kafka
  brokers: ["127.0.0.1:9092"]
  topic: "raw-swaps"            # пока что 1 партиция, в prod увеличить
  group_id: "swap-stats"        # имя consumer группы (влияет на оффсеты)
  start: "latest"               # перечитываем ли мы сообщения(earliest|latest)
  max_bytes: 1048576            # ограничение на размер сообщения 1 MiB
  max_inflight: 512             # сдерживаем параллелизм обработки, чтобы не упираться в RAM/CPU
  session_timeout: "30s"        # сколько координатор ждет от консьюмера, прежде чем сделает его мертвым
  rebalance_timeout: "120s"     # сколько участнику дается на финальные снэпшоты при ребалансе
  tls:
    enabled: false
    ca_file: "/etc/ssl/ca.pem"
    cert_file: "/etc/ssl/app.crt"
    key_file: "/etc/ssl/app.key"

dedupe:
  ttl: "24h" # время жизни ключа(event_id) при dedupe(дубликаты)

stores:
  redis: # неймспейс для ключей (swapstats:*)
    addr: "185.73.215.56:6379"
    username: "default"
    password: 5JKksp3HVfAe
    db: 2
    prefix: "swapstats:"
    # жёсткие лимиты, чтобы не залипать на сети
    dial_timeout: "1s"
    read_timeout: "2s"
    write_timeout: "2s"

  clickhouse:
    dsn: "tcp://185.73.215.56:9002?username=nevasik&password=GpW56Q4nbbXf0Oi&database=swaps&compress=true&dial_timeout=2s&read_timeout=10s&write_timeout=10s"
    writer:
      batch_max_rows: 1000 # копим до 1000 строк в батче или сбрасываем каждые batch_max_interval
      batch_max_interval: "200ms"
      max_retries: 5
      retry_backoff: "200ms"

pubsub:
  nats:
    url: "nats://185.73.215.56:4222"
    broadcast_prefix: "ws.broadcast.token." # префикс для сабжектов fan-out между инстансами (* ws.broadcast.token.USDC)

api:
  http:
    addr: ":8080"
    read_timeout:  "10s"
    write_timeout: "10s"
    idle_timeout:  "60s"
    cors:
      enabled: true
      origins: ["*"]          # в проде — сузим и зафиксировать домен
      methods: ["GET","POST","OPTIONS"]
      headers: ["Authorization","Content-Type"]

  ws:
    coalesce_ms: 100           # коалесинг обновлений (сливаем события и шлём пачкой 10 раз в секунду)
    max_conn: 5000             # лимит одновременных клиентов
    read_limit_bytes: 1048576  # 1 MiB лимит входящих сообщений
    write_timeout: "5s"        # не даем записи висеть
    heartbeat_interval: "30s"  # чтобы закрывать мертвые сокеты

metrics:
  prometheus: ":9091" # /metrics
  pprof: "127.0.0.1:4040"
